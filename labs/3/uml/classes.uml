@startuml

class File {
    -string path
    +string getPath()
    +string getName()
    +Directory getParent()
    +async string getContent()
    +async void setContent(string content)
    +async void remove()
}

class Directory {
    {static} +Directory getCurrent()
    +async Array<File> list()
    +async File copyHere(File file)
    +async File moveHere(File file)
    +async string getContent()
    +async void setContent(string content)
    +async void remove()
}

interface FileAction {
    async void execute(File file)
}

interface FileViewer {
    async Array<string> view(File file)
}

class FileEditor {
}

class FileTagCleaner {
}

class FileTruncator {
}

class FileContentViewer {
}

class FileWordCounter {
    -FileContentViewer contentViewer
}

class FileShortcutsHighlighter {
    -FileContentViewer contentViewer
    -string highlighterStart
    -string highlighterEnd
}

class FileTypeDecorator {
    -boolean? cachedIsDirectory
    -boolean? cachedIsMultilingual
    +async boolean isDirectory()
    +async boolean isMultilingual()
}

File ..> Directory
File <|-- Directory
File <.. Directory
File <.. FileAction
File <.. FileViewer
FileAction <|.. FileTruncator
FileAction <|.. FileTagCleaner
FileAction <|.. FileEditor
FileViewer <|.. FileContentViewer
FileViewer <|.. FileWordCounter
FileViewer <|.. FileShortcutsHighlighter
FileContentViewer <.. FileWordCounter
FileContentViewer <.. FileShortcutsHighlighter
File <|-- FileTypeDecorator
File <.. FileTypeDecorator

package "User Interface" <<Cloud>> {
    App *-- Panel
    App *-- Viewer
    App *-- FullScreen
    Panel *-- Entry
    FileTypeDecorator <.. Entry
    FileViewer <.. Viewer
    FileAction <.. Panel
    Directory <.. Panel
    File <.. Panel
}


@enduml
